------------------------------------python-------------------------------------
def countTransformation(a, b):
    n = len(a)
    m = len(b)
    if n == m:
        return 0
    if m == 0:
        return 1
    dp = [[0] * (n) for _ in range(m)]
    for i in range(m):
        for j in range(i, n):
            if i == 0:
                if j == 0:
                    if a[j] == b[i]:
                         dp[i][j] = 1
                    else:
                        dp[i][j] = 0
                elif a[j] == b[i]:
                    dp[i][j] = dp[i][j-1]+1
                else:
                    dp[i][j] = dp[i][j-1]
            else:
                if a[j] == b[i]:
                     dp[i][j] = (dp[i][j-1] + dp[i-1][j-1])
                else:
                    dp[i][j] = dp[i][j-1]
    return dp[m-1][n-1]
if __name__ == "__main__":
    a = input()
    b = input()
    print(countTransformation(a,b))
------------------------------------------------------java--------------------------------------
import java.io.*;

public class Shift {
 public static void main(String[] args) throws Exception {
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
  String s = br.readLine();
  int L = s.length();
  String b = s.substring(1) + String.valueOf(s.charAt(0));
  String f = String.valueOf(s.charAt(L - 1)) + s.substring(0, L - 1);
  if (b.equals(f))
   bw.write("1");
  else
   bw.write("0");
  
  bw.flush();
 }
}
--------------------------------------------cpp------------------------------------------------
def countTransformation(a, b):
    n = len(a)
    m = len(b)
    if n == m:
        return 0
    if m == 0:
        return 1
    dp = [[0] * (n) for _ in range(m)]
    for i in range(m):
        for j in range(i, n):
            if i == 0:
                if j == 0:
                    if a[j] == b[i]:
                         dp[i][j] = 1
                    else:
                        dp[i][j] = 0
                elif a[j] == b[i]:
                    dp[i][j] = dp[i][j-1]+1
                else:
                    dp[i][j] = dp[i][j-1]
            else:
                if a[j] == b[i]:
                     dp[i][j] = (dp[i][j-1] + dp[i-1][j-1])
                else:
                    dp[i][j] = dp[i][j-1]
    return dp[m-1][n-1]
if __name__ == "__main__":
    a = input()
    b = input()
    print(countTransformation(a,b))
